<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fbchat-sharp</name>
    </assembly>
    <members>
        <member name="T:fbchat_sharp.API.FB_Attachment">
            <summary>
            Represents a Facebook attachment.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FB_Attachment.#ctor(System.String)">
            <summary>
            Represents a Facebook attachment.
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_UnsentMessage">
            <summary>
            Represents an unsent message attachment.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FB_UnsentMessage.#ctor(System.String)">
            <summary>
            Represents a Facebook attachment.
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_ShareAttachment">
            <summary>
            Represents a shared item (eg. URL) that has been sent as a Facebook attachment.
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.author">
            ID of the author of the shared post
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.url">
            Target URL
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.original_url">
            Original URL if Facebook redirects the URL
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.title">
            Title of the attachment
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.description">
            Description of the attachment
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.source">
            Name of the source
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.image_url">
            URL of the attachment image
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.original_image_url">
            URL of the original image if Facebook uses `safe_image`
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.image_width">
            Width of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.image_height">
            Height of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_ShareAttachment.attachments">
            A list of attachments
        </member>
        <member name="M:fbchat_sharp.API.FB_ShareAttachment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.List{fbchat_sharp.API.FB_Attachment})">
            <summary>
            Represents a shared item (eg. URL) that has been sent as a Facebook attachment.
            </summary>
            <param name="uid"></param>
            <param name="author"></param>
            <param name="url"></param>
            <param name="original_url"></param>
            <param name="title"></param>
            <param name="description"></param>
            <param name="source"></param>
            <param name="image_url"></param>
            <param name="original_image_url"></param>
            <param name="image_width"></param>
            <param name="image_height"></param>
            <param name="attachments"></param>
        </member>
        <member name="T:fbchat_sharp.API.Client_Constants">
            <summary>
            
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.Client">
            <summary>
            A client for the Facebook Chat (Messenger).
            This is the main class of `fbchat-sharp`, which contains all the methods you use to
            interact with Facebook.You can extend this class, and overwrite the `on` methods,
            to provide custom event handling (mainly useful while listening).
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.Client.listening">
            Whether the client is listening. Used when creating an external event loop to determine when to stop listening.
        </member>
        <member name="P:fbchat_sharp.API.Client._state">
            Stores and manages state required for most Facebook requests.
        </member>
        <member name="F:fbchat_sharp.API.Client.mqttClient">
            Mqtt client for receiving messages
        </member>
        <member name="P:fbchat_sharp.API.Client._uid">
            <summary>
            The ID of the client.
            Can be used as `thread_id`.
            Note: Modifying this results in undefined behaviour
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.#ctor">
            <summary>
            A client for the Facebook Chat (Messenger).
            This is the main class of `fbchat-sharp`, which contains all the methods you use to
            interact with Facebook.You can extend this class, and overwrite the `on` methods,
            to provide custom event handling (mainly useful while listening).
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.fromSession(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Net.Cookie}},System.String)">
            <summary>
            Tries to login using a list of provided cookies.
            </summary>
            <param name="session_cookies">Cookies from a previous session</param>
            <param name="user_agent"></param>
        </member>
        <member name="M:fbchat_sharp.API.Client.isLoggedIn">
            <summary>
            Sends a request to Facebook to check the login status
            </summary>
            <returns>true if the client is still logged in</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.getSession">
            <summary>
            Retrieves session cookies
            </summary>
            <returns>A dictionay containing session cookies</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.setSession(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Net.Cookie}},System.String)">
            <summary>
            Loads session cookies
            </summary>
            <param name="session_cookies"></param>
            <param name="user_agent"></param>
        </member>
        <member name="M:fbchat_sharp.API.Client.login(System.String,System.String,System.String)">
            <summary>
            Uses ``email`` and ``password`` to login the user (If the user is already logged in, this will do a re-login)
            </summary>
            <param name="email">Facebook ``email`` or ``id`` or ``phone number``</param>
            <param name="password">Facebook account password</param>
            <param name="user_agent"></param>
        </member>
        <member name="M:fbchat_sharp.API.Client.logout">
            <summary>
            Safely logs out the client
            </summary>
            <returns>true if the action was successful</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client._getThread(System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Checks if thread ID is given, checks if default is set and returns correct values
            </summary>
            <param name="given_thread_id"></param>
            <param name="given_thread_type"></param>
            <returns>Thread ID and thread type</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.setDefaultThread(System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sets default thread to send messages to
            </summary>
            <param name="thread_id">User / FGroup ID to default to.See :ref:`intro_threads`</param>
            <param name="thread_type"></param>
        </member>
        <member name="M:fbchat_sharp.API.Client.resetDefaultThread">
            <summary>
            Resets default thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchThreads(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all threads in thread_location.
            Threads will be sorted from newest to oldest.
            </summary>
            <param name="thread_location">ThreadLocation: INBOX, PENDING, ARCHIVED or OTHER</param>
            <param name="before">Fetch only thread before this epoch (in ms) (default all threads)</param>
            <param name="after">Fetch only thread after this epoch (in ms) (default all threads)</param>
            <param name="limit">The max. amount of threads to fetch (default all threads)</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchAllUsersFromThreads(System.Collections.Generic.List{fbchat_sharp.API.FB_Thread})">
            <summary>
            Get all users involved in threads.
            </summary>
            <param name="threads">threads: Thread: List of threads to check for users</param>
            <returns>:class:`FB_User` objects</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchAllUsers">
            <summary>
            Gets all users the client is currently chatting with
            </summary>
            <returns>:class:`FB_User` objects</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForUsers(System.String,System.Int32)">
            <summary>
            Find and get user by his/her name
            </summary>
            <param name="name">Name of the user</param>
            <param name="limit">The max. amount of users to fetch</param>
            <returns>:class:`FB_User` objects, ordered by relevance</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForPages(System.String,System.Int32)">
            <summary>
            Find and get page by its name
            </summary>
            <param name="name">Name of the page</param>
            <param name="limit">The max. amount of pages to fetch</param>
            <returns>:class:`FB_Page` objects, ordered by relevance</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForGroups(System.String,System.Int32)">
            <summary>
            Find and get group thread by its name
            </summary>
            <param name="name">Name of the group</param>
            <param name="limit">The max. amount of groups to fetch</param>
            <returns>:class:`FB_Group` objects, ordered by relevance</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForThreads(System.String,System.Int32)">
            <summary>
            Find and get a thread by its name
            </summary>
            <param name="name">Name of the thread</param>
            <param name="limit">The max. amount of threads to fetch</param>
            <returns>:class:`FB_User`, :class:`FB_Group` and :class:`FB_Page` objects, ordered by relevance</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForMessageIDs(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Find and get message IDs by query
            </summary>
            <param name="query">Text to search for</param>
            <param name="offset">Number of messages to skip</param>
            <param name="limit">Max. number of messages to retrieve</param>
            <param name="thread_id">User/Group ID to search in. See :ref:`intro_threads`</param>
            <returns>Found Message IDs</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.searchForMessages(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Find and get:class:`FB_Message` objects by query
            </summary>
            <param name="query">Text to search for</param>
            <param name="offset">Number of messages to skip</param>
            <param name="limit">Max.number of messages to retrieve</param>
            <param name="thread_id">User/Group ID to search in. See :ref:`intro_threads`</param>
            <returns>Found :class:`FB_Message` objects</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.search(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Searches for messages in all threads
            </summary>
            <param name="query">Text to search for</param>
            <param name="fetch_messages">Whether to fetch :class:`Message` objects or IDs only</param>
            <param name="thread_limit">Max. number of threads to retrieve</param>
            <param name="message_limit">Max. number of messages to retrieve</param>
            <returns>Dictionary with thread IDs as keys and iterables to get messages as values</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchProfile">
            <summary>
            Get logged user's info
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchUserInfo(System.Collections.Generic.List{System.String})">
            <summary>
            Get users' info from IDs, unordered
            </summary>
            <param name="user_ids">One or more user ID(s) to query</param>
            <returns>A dictionary of FB_User objects, labeled by their ID</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchPageInfo(System.Collections.Generic.List{System.String})">
            <summary>
            Get pages' info from IDs, unordered
            </summary>
            <param name="page_ids">One or more page ID(s) to query</param>
            <returns>A dictionary of FB_Page objects, labeled by their ID</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchGroupInfo(System.Collections.Generic.List{System.String})">
            <summary>
            Get groups' info from IDs, unordered
            </summary>
            <param name="group_ids">One or more group ID(s) to query</param>
            <returns>A dictionary of FB_Group objects, labeled by their ID</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchThreadInfo(System.Collections.Generic.List{System.String})">
            <summary>
            Get threads' info from IDs, unordered
            </summary>
            <param name="thread_ids">One or more thread ID(s) to query</param>
            <returns>A dictionary of FB_Thread objects, labeled by their ID</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchThreadMessages(System.String,System.Int32,System.String)">
            <summary>
            Get the last messages in a thread
            </summary>
            <param name="thread_id">User / Group ID from which to retrieve the messages</param>
            <param name="limit">Max.number of messages to retrieve</param>
            <param name="before">A unix timestamp, indicating from which point to retrieve messages</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchThreadList(System.Int32,System.String,System.String)">
            <summary>
            Get thread list of your facebook account
            </summary>
            <param name="limit">Max.number of threads to retrieve. Capped at 20</param>
            <param name="thread_location">models.ThreadLocation: INBOX, PENDING, ARCHIVED or OTHER</param>
            <param name="before">A unix timestamp, indicating from which point to retrieve messages</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchUnread">
            <summary>
            Get unread user threads
            </summary>
            <returns>Returns unread thread ids</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchUnseen">
            <summary>
            Get unseen user threads
            </summary>
            <returns>Returns unseen message ids</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchImageUrl(System.String)">
            <summary>
            Fetches the url to the original image from an image attachment ID
            </summary>
            <returns>An url where you can download the original image</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchMessageInfo(System.String,System.String)">
            <summary>
            Fetches:class:`Message` object from the message id
            </summary>
            <param name="mid">Message ID to fetch from</param>
            <param name="thread_id">User/Group ID to get message info from.See :ref:`intro_threads`</param>
            <returns>:class:`FB_Message` object</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchPollOptions(System.String)">
            <summary>
            Fetches list of:class:`PollOption` objects from the poll id
            </summary>
            <param name="poll_id">Poll ID to fetch from</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchPlanInfo(System.String)">
            <summary>
            Fetches a :class:`Plan` object from the plan id
            </summary>
            <param name="plan_id">Plan ID to fetch from</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.getPhoneNumbers">
            <summary>
            Fetches a list of user phone numbers.
            </summary>
            <returns>List of phone numbers</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.getEmails">
            <summary>
            Fetches a list of user emails.
            </summary>
            <returns>List of emails</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.getUserActiveStatus(System.String)">
            <summary>
            Gets friend active status as an :class:`ActiveStatus` object.
            Returns ``null`` if status isn't known.
            .. warning::
            Only works when listening.
            </summary>
            <param name="user_id">ID of the user</param>
            <returns>Given user active status</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchActiveUsers">
            <summary>
            Fetches currently active users
            </summary>
            <returns>List of active user ids</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.fetchThreadImages(System.String)">
            <summary>
            Creates generator object for fetching images posted in thread.
            </summary>
            <param name="thread_id">ID of the thread</param>
            <returns>:class:`ImageAttachment` or :class:`VideoAttachment`.</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.send(fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a message to a thread
            </summary>
            <param name="message">Message to send</param>
            <param name="thread_id">User / Group ID to send to</param>
            <param name="thread_type">ThreadType enum</param>
            <returns>Message ID of the sent message</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendMessage(System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a message to a thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendEmoji(System.String,fbchat_sharp.API.EmojiSize,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a message to a thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.wave(System.Boolean,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            :ref:`Message ID` of the sent message
            </summary>
            <param name="wave_first">Whether to wave first or wave back</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.quickReply(fbchat_sharp.API.FB_QuickReply,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Replies to a chosen quick reply
            </summary>
            <param name="quick_reply">Quick reply to reply to</param>
            <param name="payload">Optional answer to the quick reply</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.unsend(System.String)">
            <summary>
            Unsends a message(removes for everyone)
            </summary>
            <param name="mid">:ref:`Message ID` of the message to unsend</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendLocation(fbchat_sharp.API.FB_LocationAttachment,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a given location to a thread as the user's current location
            </summary>
            <param name="location">Location to send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>:ref:`Message ID` of the sent message</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendPinnedLocation(fbchat_sharp.API.FB_LocationAttachment,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a given location to a thread as a pinned location
            </summary>
            <param name="location">Location to send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>:ref:`Message ID` of the sent message</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendRemoteFiles(System.Collections.Generic.List{System.String},fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends files from URLs to a thread
            </summary>
            <param name="file_urls">URLs of files to upload and send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>`Message ID of the sent files</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendLocalFiles(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends local files to a thread
            </summary>
            <param name="file_paths">Paths of files to upload and send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to. See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>:ref:`Message ID` of the sent files</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendRemoteVoiceClips(System.Collections.Generic.List{System.String},fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends voice clips from URLs to a thread
            </summary>
            <param name="clip_urls">URLs of voice clips to upload and send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>`Message ID of the sent files</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendLocalVoiceClips(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends local voice clips to a thread
            </summary>
            <param name="clip_paths">Paths of voice clips to upload and send</param>
            <param name="message">Additional message</param>
            <param name="thread_id">User/Group ID to send to. See :ref:`intro_threads`</param>
            <param name="thread_type">See :ref:`intro_threads`</param>
            <returns>:ref:`Message ID` of the sent files</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendImage(System.String,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Boolean)">
            <summary>
            Sends an image to a thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendRemoteImage(System.String,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends an image from a URL to a thread
            </summary>
            <param name="image_url"></param>
            <param name="message"></param>
            <param name="thread_id"></param>
            <param name="thread_type"></param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.sendLocalImage(System.String,System.IO.Stream,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sends a local image to a thread
            </summary>
            <param name="image_path"></param>
            <param name="data"></param>
            <param name="message"></param>
            <param name="thread_id"></param>
            <param name="thread_type"></param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.forwardAttachment(System.String,System.String)">
            <summary>
            Forwards an attachment
            </summary>
            <param name="attachment_id">Attachment ID to forward</param>
            <param name="thread_id">User/Group ID to send to.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.createGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a group with the given ids
            </summary>
            <param name="message">The initial message</param>
            <param name="user_ids">A list of users to create the group with.</param>
            <returns>ID of the new group</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.addUsersToGroup(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Adds users to a group.
            </summary>
            <param name="user_ids">One or more user IDs to add</param>
            <param name="thread_id">Group ID to add people to.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.removeUserFromGroup(System.String,System.String)">
            <summary>
            Removes users from a group.
            </summary>
            <param name="user_id">User ID to remove</param>
            <param name="thread_id">Group ID to remove people from</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.addGroupAdmins(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Sets specifed users as group admins.
            </summary>
            <param name="admin_ids">One or more user IDs to set admin</param>
            <param name="thread_id">Group ID to remove people from</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.removeGroupAdmins(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Removes admin status from specifed users.
            </summary>
            <param name="admin_ids">One or more user IDs to remove admin</param>
            <param name="thread_id">Group ID to remove people from</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeGroupApprovalMode(System.Boolean,System.String)">
            <summary>
            Changes group's approval mode
            </summary>
            <param name="require_admin_approval">true or false</param>
            <param name="thread_id">Group ID</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.acceptUsersToGroup(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Accepts users to the group from the group's approval
            </summary>
            <param name="user_ids">One or more user IDs to accept</param>
            <param name="thread_id">Group ID</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.denyUsersFromGroup(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Denies users from the group 's approval
            </summary>
            <param name="user_ids">One or more user IDs to deny</param>
            <param name="thread_id">Group ID</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client._changeGroupImage(System.String,System.String)">
            <summary>
            Changes a thread image from an image id
            </summary>
            <param name="image_id">ID of uploaded image</param>
            <param name="thread_id">User / Group ID to change image.See: ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeGroupImageRemote(System.String,System.String)">
            <summary>
            Changes a thread image from a URL
            </summary>
            <param name="image_url">URL of an image to upload and change</param>
            <param name="thread_id">User / Group ID to change image.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeGroupImageLocal(System.String,System.IO.Stream,System.String)">
            <summary>
            Changes a thread image from a local path
            </summary>
            <param name="image_path">Path of an image to upload and change</param>
            <param name="image_stream"></param>
            <param name="thread_id">User / Group ID to change image.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeThreadTitle(System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Changes title of a thread.
            If this is executed on a user thread, this will change the nickname of that user, effectively changing the title
            </summary>
            <param name="title">New group thread title</param>
            <param name="thread_id">Group ID to change title of. See: ref:`intro_threads`</param>
            <param name="thread_type"></param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeNickname(System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Changes the nickname of a user in a thread
            </summary>
            <param name="nickname">New nickname</param>
            <param name="user_id">User that will have their nickname changed</param>
            <param name="thread_id">User / Group ID to change color of</param>
            <param name="thread_type"></param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeThreadColor(System.String,System.String)">
            <summary>
            Changes thread color
            </summary>
            <param name="color">New thread color</param>
            <param name="thread_id">User / Group ID to change color of.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changeThreadEmoji(System.String,System.String)">
            <summary>
            Changes thread color
            </summary>
            <param name="emoji">While changing the emoji, the Facebook web client actually sends multiple different requests, though only this one is required to make the change</param>
            <param name="thread_id">User / Group ID to change emoji of.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.reactToMessage(System.String,System.Nullable{fbchat_sharp.API.MessageReaction})">
            <summary>
            Reacts to a message, or removes reaction
            </summary>
            <param name="message_id">`Message ID` to react to</param>
            <param name="reaction">Reaction emoji to use, if null removes reaction</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.createPlan(fbchat_sharp.API.FB_Plan,System.String)">
            <summary>
            Sets a plan
            </summary>
            <param name="plan">Plan to set</param>
            <param name="thread_id">User / Group ID to send plan to.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.editPlan(fbchat_sharp.API.FB_Plan,fbchat_sharp.API.FB_Plan)">
            <summary>
            Edits a plan
            </summary>
            <param name="plan">Plan to edit</param>
            <param name="new_plan">New plan</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.deletePlan(fbchat_sharp.API.FB_Plan)">
            <summary>
            Deletes a plan
            </summary>
            <param name="plan">Plan to delete.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.changePlanParticipation(fbchat_sharp.API.FB_Plan,System.Boolean)">
            <summary>
            Changes participation in a plan
            </summary>
            <param name="plan">Plan to take part in or not</param>
            <param name="take_part">Whether to take part in the plan</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.createPoll(fbchat_sharp.API.FB_Poll,System.String)">
            <summary>
            Creates poll in a group thread
            </summary>
            <param name="poll">Poll to create</param>
            <param name="thread_id">User / Group ID to create poll in.</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.updatePollVote(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Updates a poll vote
            </summary>
            <param name="poll_id">ID of the poll to update vote</param>
            <param name="option_ids">List of the option IDs to vote</param>
            <param name="new_options">List of the new option names</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.setTypingStatus(fbchat_sharp.API.TypingStatus,System.String,System.Nullable{fbchat_sharp.API.ThreadType})">
            <summary>
            Sets users typing status in a thread
            </summary>
            <param name="status">Specify the typing status</param>
            <param name="thread_id">User / Group ID to change status in. See: ref:`intro_threads`</param>
            <param name="thread_type">See: ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.markAsDelivered(System.String,System.String)">
            <summary>
            Mark a message as delivered
            </summary>
            <param name="thread_id">User/Group ID to which the message belongs.See :ref:`intro_threads`</param>
            <param name="message_id">Message ID to set as delivered.See :ref:`intro_threads`</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.markAsRead(System.Collections.Generic.List{System.String})">
            <summary>
            Mark threads as read
            All messages inside the threads will be marked as read
            </summary>
            <param name="thread_ids">User/Group IDs to set as read.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.markAsUnread(System.Collections.Generic.List{System.String})">
            <summary>
            Mark threads as unread
            All messages inside the threads will be marked as unread
            </summary>
            <param name="thread_ids">User/Group IDs to set as unread.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.removeFriend(System.String)">
            <summary>
            Removes a specifed friend from your friend list
            </summary>
            <param name="friend_id">The ID of the friend that you want to remove</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.blockUser(System.String)">
            <summary>
            Blocks messages from a specifed user
            </summary>
            <param name="user_id">The ID of the user that you want to block</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.unblockUser(System.String)">
            <summary>
            The ID of the user that you want to block
            </summary>
            <param name="user_id">The ID of the user that you want to unblock</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.moveThreads(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Moves threads to specifed location
            </summary>
            <param name="location">ThreadLocation: INBOX, PENDING, ARCHIVED or OTHER</param>
            <param name="thread_ids">Thread IDs to move.See :ref:`intro_threads`</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.deleteThreads(System.Collections.Generic.List{System.String})">
            <summary>
            Deletes threads
            </summary>
            <param name="thread_ids">Thread IDs to delete. See :ref:`intro_threads`</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.markAsSpam(System.String)">
            <summary>
            Mark a thread as spam and delete it
            </summary>
            <param name="thread_id">User/Group ID to mark as spam.See :ref:`intro_threads`</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.deleteMessages(System.Collections.Generic.List{System.String})">
            <summary>
            Deletes specifed messages
            </summary>
            <param name="message_ids">Message IDs to delete</param>
            <returns>true</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.muteThread(System.Int32,System.String)">
            <summary>
            Mutes thread
            </summary>
            <param name="mute_time">Mute time in seconds, leave blank to mute forever</param>
            <param name="thread_id">User/Group ID to mute.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.unmuteThread(System.String)">
            <summary>
            Unmutes thread
            </summary>
            <param name="thread_id">User/Group ID to unmute.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.muteThreadReactions(System.Boolean,System.String)">
            <summary>
            Mutes thread reactions
            </summary>
            <param name="mute">Boolean.true to mute, false to unmute</param>
            <param name="thread_id">User/Group ID to mute.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.unmuteThreadReactions(System.String)">
            <summary>
            Unmutes thread reactions
            </summary>
            <param name="thread_id"></param>
            <returns>User/Group ID to unmute.See :ref:`intro_threads`</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.muteThreadMentions(System.Boolean,System.String)">
            <summary>
            Mutes thread mentions
            </summary>
            <param name="mute">Boolean.true to mute, false to unmute</param>
            <param name="thread_id">User/Group ID to mute.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.unmuteThreadMentions(System.String)">
            <summary>
            Unmutes thread mentions
            </summary>
            <param name="thread_id">User/Group ID to unmute.See :ref:`intro_threads`</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.startListening(System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>
            Start listening from an external event loop
            </summary>
            <param name="_cancellationTokenSource"></param>
            <param name="markAlive">Whether this should ping the Facebook server before running</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.doOneListen(System.Threading.CancellationToken)">
            <summary>
            Does one cycle of the listening loop.
            This method is useful if you want to control fbchat from an external event loop
            </summary>
            <param name="cancellationToken"></param>
            <returns>Whether the loop should keep running</returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.stopListening">
            <summary>
            Cleans up the variables from startListening
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.setActiveStatus(System.Boolean)">
            <summary>
            Changes client active status while listening
            </summary>
            <param name="markAlive">Whether to show if client is active</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onLoggingIn(System.String)">
            <summary>
            Called when the client is logging in
            </summary>
            <param name="email">The email of the client</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.on2FACode">
            <summary>
            Called when a 2FA code is requested
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.onLoggedIn(System.String)">
            <summary>
            Called when the client is successfully logged in
            </summary>
            <param name="email">The email of the client</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onListening">
            <summary>
            Called when the client is listening
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMqttListenError(System.Exception)">
            <summary>
            Called when an error was encountered while listening on mqtt
            </summary>
            <param name="exception">The exception that was encountered</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMessage(System.String,System.String,System.String,fbchat_sharp.API.FB_Message,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody sends a message
            </summary>
            <param name="mid">The message ID</param>
            <param name="author_id">The ID of the author</param>
            <param name="message">The message content</param>
            <param name="message_object">The message object</param>
            <param name="thread_id">Thread ID that the message was sent to</param>
            <param name="thread_type">Type of thread that the message was sent to</param>
            <param name="ts">The timestamp of the message</param>
            <param name="metadata">Extra metadata about the message</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPendingMessage(System.String,System.Nullable{fbchat_sharp.API.ThreadType},Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody that isn't
            connected with you on either Facebook or Messenger sends a message.
            After that, you need to use fetchThreadList to actually read the message.
            </summary>
            <param name="thread_id">Thread ID that the message was sent to</param>
            <param name="thread_type">Type of thread that the message was sent to</param>
            <param name="metadata">Extra metadata about the message</param>
            <param name="msg">A full set of the data received</param>
            <returns></returns>
        </member>
        <member name="M:fbchat_sharp.API.Client.onColorChange(System.String,System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody changes a thread's color
            </summary>
            <param name="mid">The action ID</param>
            <param name="author_id">The ID of the person who changed the color</param>
            <param name="new_color">The new color</param>
            <param name="thread_id">Thread ID that the action was sent to</param>
            <param name="thread_type">Type of thread that the action was sent to</param>
            <param name="ts">A timestamp of the action</param>
            <param name="metadata">Extra metadata about the action</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onEmojiChange(System.String,System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody changes a thread's emoji
            </summary>
            <param name="mid">The action ID</param>
            <param name="author_id">The ID of the person who changed the emoji</param>
            <param name="new_emoji">The new emoji</param>
            <param name="thread_id">Thread ID that the action was sent to</param>
            <param name="thread_type">Type of thread that the action was sent to</param>
            <param name="ts">A timestamp of the action</param>
            <param name="metadata">Extra metadata about the action</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onTitleChange(System.String,System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody changes a thread's title
            </summary>
            <param name="mid">The action ID</param>
            <param name="author_id">The ID of the person who changed the title</param>
            <param name="new_title">The new title</param>
            <param name="thread_id">Thread ID that the action was sent to</param>
            <param name="thread_type">Type of thread that the action was sent to</param>
            <param name="ts">A timestamp of the action</param>
            <param name="metadata">Extra metadata about the action</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onImageChange(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody changes a thread's image
            </summary>
            <param name="mid">The action ID</param>
            <param name="author_id">The ID of the person who changed the image</param>
            <param name="new_image">The new image</param>
            <param name="thread_id">Thread ID that the action was sent to</param>
            <param name="thread_type">Type of thread that the action was sent to</param>
            <param name="ts">A timestamp of the action</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onNicknameChange(System.String,System.String,System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Called when the client is listening, and somebody changes the nickname of a person
            </summary>
            <param name="mid">The action ID</param>
            <param name="author_id">The ID of the person who changed the nickname</param>
            <param name="changed_for">The ID of the person whom got their nickname changed</param>
            <param name="new_nickname">The new nickname</param>
            <param name="thread_id">Thread ID that the action was sent to</param>
            <param name="thread_type">Type of thread that the action was sent to</param>
            <param name="ts">A timestamp of the action</param>
            <param name="metadata">Extra metadata about the action</param>
            <param name="msg">A full set of the data received</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onAdminAdded(System.String,System.String,System.String,System.String,fbchat_sharp.API.ThreadType,System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody adds an admin to a group thread
            </summary>
             <param name="mid">The action ID</param>
             <param name="added_id">The ID of the admin who got added</param>
             <param name="author_id">The ID of the person who added the admins</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type"></param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onAdminRemoved(System.String,System.String,System.String,System.String,fbchat_sharp.API.ThreadType,System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody removes an admin from a group thread
            </summary>
             <param name="mid">The action ID</param>
             <param name="removed_id">The ID of the admin who got removed</param>
             <param name="author_id">The ID of the person who removed the admins</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type"></param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onApprovalModeChange(System.String,System.Boolean,System.String,System.String,fbchat_sharp.API.ThreadType,System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody changes approval mode in a group thread
            </summary>
             <param name="mid">The action ID</param>
             <param name="approval_mode">True if approval mode is activated</param>
             <param name="author_id">The ID of the person who changed approval mode</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type"></param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMessageSeen(System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody marks a message as seen
            </summary>
             <param name="seen_by">The ID of the person who marked the message as seen</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="seen_ts">A timestamp of when the person saw the message</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMessageDelivered(Newtonsoft.Json.Linq.JToken,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody marks messages as delivered
            </summary>
             <param name="msg_ids">The messages that are marked as delivered</param>
             <param name="delivered_for">The person that marked the messages as delivered</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMarkedSeen(System.Collections.Generic.List{System.Tuple{System.String,fbchat_sharp.API.ThreadType}},System.Int64,System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and the client has successfully marked threads as seen
            </summary>
             <param name="threads">The threads that were marked</param>
             <param name="seen_ts">A timestamp of when the threads were seen</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMessageUnsent(System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and someone unsends (deletes for everyone) a message
            </summary>
             <param name="mid">ID of the unsent message</param>
             <param name="author_id">The ID of the person who unsent the message</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPeopleAdded(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody adds people to a group thread
            </summary>
             <param name="mid">The action ID</param>
             <param name="added_ids">The IDs of the people who got added</param>
             <param name="author_id">The ID of the person who added the people</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPersonRemoved(System.String,System.String,System.String,System.String,System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody removes a person from a group thread
            </summary>
             <param name="mid">The action ID</param>
             <param name="removed_id">The ID of the person who got removed</param>
             <param name="author_id">The ID of the person who removed the person</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onFriendRequest(System.Object,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody sends a friend request
            </summary>
             <param name="from_id">The ID of the person that sent the request</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client._onSeen(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
             .. todo::
             Documenting this and make it public
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.Client.onInbox(System.Object,System.Object,System.Object,Newtonsoft.Json.Linq.JToken)">
            <summary>
             .. todo::
             Documenting this
            </summary>
             <param name="unseen">--</param>
             <param name="unread">--</param>
             <param name="recent_unread">--</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onTyping(System.String,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody starts or stops typing into a chat
            </summary>
             <param name="author_id">The ID of the person who sent the action</param>
             <param name="status">The typing status</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onGamePlayed(System.String,System.String,System.Object,System.Object,System.Object,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody plays a game
            </summary>
             <param name="mid">The action ID</param>
             <param name="author_id">The ID of the person who played the game</param>
             <param name="game_id">The ID of the game</param>
             <param name="game_name">Name of the game</param>
             <param name="score">Score obtained in the game</param>
             <param name="leaderboard">Actual leaderboard of the game in the thread</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onReactionAdded(System.String,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody reacts to a message
            </summary>
             <param name="mid">Message ID, that user reacted to</param>
             <param name="reaction">Reaction</param>
             <param name="author_id">The ID of the person who reacted to the message</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onReactionRemoved(System.String,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody removes reaction from a message
            </summary>
             <param name="mid">Message ID, that user reacted to</param>
             <param name="author_id">The ID of the person who removed reaction</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onBlock(System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody blocks client
            </summary>
             <param name="author_id">The ID of the person who blocked</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onUnblock(System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody blocks client
            </summary>
             <param name="author_id">The ID of the person who unblocked</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onLiveLocation(System.String,fbchat_sharp.API.FB_LiveLocationAttachment,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening and somebody sends live location info
            </summary>
             <param name="mid">The action ID</param>
             <param name="location">Sent location info</param>
             <param name="author_id">The ID of the person who sent location info</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onCallStarted(System.String,System.Object,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             .. todo::
             Make this work with private calls
             Called when the client is listening, and somebody starts a call in a group
            </summary>
             <param name="mid">The action ID</param>
             <param name="caller_id">The ID of the person who started the call</param>
             <param name="is_video_call">True if it's video call</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onCallEnded(System.String,System.Object,System.Object,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             .. todo::
             Make this work with private calls
             Called when the client is listening, and somebody ends a call in a group
            </summary>
             <param name="mid">The action ID</param>
             <param name="caller_id">The ID of the person who ended the call</param>
             <param name="is_video_call">True if it was video call</param>
             <param name="call_duration">Call duration in seconds</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onUserJoinedCall(System.String,System.Object,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody joins a group call
            </summary>
             <param name="mid">The action ID</param>
             <param name="joined_id">The ID of the person who joined the call</param>
             <param name="is_video_call">True if it's video call</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPollCreated(System.String,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody creates a group poll
            </summary>
             <param name="mid">The action ID</param>
             <param name="poll">Created poll</param>
             <param name="author_id">The ID of the person who created the poll</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPollVoted(System.String,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody votes in a group poll
            </summary>
             <param name="mid">The action ID</param>
             <param name="poll">Poll, that user voted in</param>
             <param name="added_options"></param>
             <param name="removed_options"></param>
             <param name="author_id">The ID of the person who voted in the poll</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPlanCreated(System.String,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody creates a plan
            </summary>
             <param name="mid">The action ID</param>
             <param name="plan">Created plan</param>
             <param name="author_id">The ID of the person who created the plan</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPlanEnded(System.String,System.Object,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and a plan ends
            </summary>
             <param name="mid">The action ID</param>
             <param name="plan">Ended plan</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPlanEdited(System.String,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody edits a plan
            </summary>
             <param name="mid">The action ID</param>
             <param name="plan">Edited plan</param>
             <param name="author_id">The ID of the person who edited the plan</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPlanDeleted(System.String,System.Object,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody deletes a plan
            </summary>
             <param name="mid">The action ID</param>
             <param name="plan">Deleted plan</param>
             <param name="author_id">The ID of the person who deleted the plan</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onPlanParticipation(System.String,fbchat_sharp.API.FB_Plan,System.Boolean,System.String,System.String,System.Nullable{fbchat_sharp.API.ThreadType},System.Int64,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and somebody takes part in a plan or not
            </summary>
             <param name="mid">The action ID</param>
             <param name="plan">Plan</param>
             <param name="take_part">Whether the person takes part in the plan or not</param>
             <param name="author_id">The ID of the person who will participate in the plan or not</param>
             <param name="thread_id">Thread ID that the action was sent to. See :ref:`intro_threads`</param>
             <param name="thread_type">Type of thread that the action was sent to. See :ref:`intro_threads`</param>
             <param name="ts">A timestamp of the action</param>
             <param name="metadata">Extra metadata about the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onQprimer(System.Int64,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client just started listening
            </summary>
             <param name="ts">A timestamp of the action</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onChatTimestamp(System.Object,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client receives chat online presence update
            </summary>
             <param name="buddylist">A list of dicts with friend id and last seen timestamp</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onBuddylistOverlay(System.Object,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening and client receives information about friend active status
            </summary>
             <param name="statuses">Dictionary with user IDs as keys and :class:`ActiveStatus` as values</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onUnknownMesssageType(Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when the client is listening, and some unknown data was recieved
            </summary>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="M:fbchat_sharp.API.Client.onMessageError(System.Object,Newtonsoft.Json.Linq.JToken)">
            <summary>
             Called when an error was encountered while parsing recieved data
            </summary>
             <param name="exception">The exception that was encountered</param>
             <param name="msg">A full set of the data recieved</param>
        </member>
        <member name="T:fbchat_sharp.API.FBchatException">
            <summary>
            Custom exception thrown by fbchat-sharp. All exceptions in the fbchat-sharp module inherits this
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FBchatException.#ctor(System.String)">
            <summary>
            Custom exception thrown by fbchat-sharp. All exceptions in the fbchat-sharp module inherits this
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FBchatFacebookError">
            <summary>
            Thrown by fbchat-sharp when Facebook returns an error
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FBchatFacebookError.fb_error_code">
            The error code that Facebook returned
        </member>
        <member name="P:fbchat_sharp.API.FBchatFacebookError.fb_error_message">
            The error message that Facebook returned (In the user's own language)
        </member>
        <member name="P:fbchat_sharp.API.FBchatFacebookError.request_status_code">
            The status code that was sent in the http response (eg. 404) (Usually only set if not successful, aka. not 200)
        </member>
        <member name="M:fbchat_sharp.API.FBchatFacebookError.#ctor(System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Thrown by fbchat-sharp when Facebook returns an error
            </summary>
            <param name="message"></param>
            <param name="fb_error_code"></param>
            <param name="fb_error_message"></param>
            <param name="request_status_code"></param>
        </member>
        <member name="T:fbchat_sharp.API.FBchatInvalidParameters">
            <summary>
            Raised by Facebook if:
            - Some function supplied invalid parameters.
            - Some content is not found.
            - Some content is no longer available.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FBchatInvalidParameters.#ctor(System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Raised by Facebook if:
            - Some function supplied invalid parameters.
            - Some content is not found.
            - Some content is no longer available.
            </summary>
            <param name="message"></param>
            <param name="fb_error_code"></param>
            <param name="fb_error_message"></param>
            <param name="request_status_code"></param>
        </member>
        <member name="T:fbchat_sharp.API.FBchatNotLoggedIn">
            <summary>
            Raised by Facebook if the client has been logged out.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FBchatNotLoggedIn.#ctor(System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Raised by Facebook if the client has been logged out.
            </summary>
            <param name="message"></param>
            <param name="fb_error_code"></param>
            <param name="fb_error_message"></param>
            <param name="request_status_code"></param>
        </member>
        <member name="T:fbchat_sharp.API.FBchatPleaseRefresh">
            <summary>
            Raised by Facebook if the client has been inactive for too long.
            This error usually happens after 1-2 days of inactivity.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FBchatPleaseRefresh.#ctor(System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Raised by Facebook if the client has been inactive for too long.
            This error usually happens after 1-2 days of inactivity.
            </summary>
            <param name="message"></param>
            <param name="fb_error_code"></param>
            <param name="fb_error_message"></param>
            <param name="request_status_code"></param>
        </member>
        <member name="T:fbchat_sharp.API.FBchatUserError">
            <summary>
            Thrown by fbchat-sharp when wrong values are entered
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FBchatUserError.#ctor(System.String)">
            <summary>
            Thrown by fbchat-sharp when wrong values are entered
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_File">
            <summary>
            Facebook messenger file class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_File.path">
            Local or remote file path
        </member>
        <member name="P:fbchat_sharp.API.FB_File.data">
            Local or remote file stream
        </member>
        <member name="P:fbchat_sharp.API.FB_File.mimetype">
            Local or remote file type
        </member>
        <member name="T:fbchat_sharp.API.FB_FileAttachment">
            <summary>
            Represents a file that has been sent as a Facebook attachment.
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_FileAttachment.url">
            Url where you can download the file
        </member>
        <member name="P:fbchat_sharp.API.FB_FileAttachment.size">
            Size of the file in bytes
        </member>
        <member name="P:fbchat_sharp.API.FB_FileAttachment.name">
            Name of the file
        </member>
        <member name="P:fbchat_sharp.API.FB_FileAttachment.is_malicious">
            Whether Facebook determines that this file may be harmful
        </member>
        <member name="M:fbchat_sharp.API.FB_FileAttachment.#ctor(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Represents a file that has been sent as a Facebook attachment.
            </summary>
            <param name="uid"></param>
            <param name="url"></param>
            <param name="size"></param>
            <param name="name"></param>
            <param name="is_malicious"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_AudioAttachment">
            <summary>
            Represents an audio file that has been sent as a Facebook attachment - *Currently Incomplete!*
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_AudioAttachment.filename">
            Name of the file
        </member>
        <member name="P:fbchat_sharp.API.FB_AudioAttachment.url">
            Url where you can download the file
        </member>
        <member name="P:fbchat_sharp.API.FB_AudioAttachment.duration">
            Length of video in milliseconds
        </member>
        <member name="P:fbchat_sharp.API.FB_AudioAttachment.audio_type">
            Audio type
        </member>
        <member name="M:fbchat_sharp.API.FB_AudioAttachment.#ctor(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Represents an audio file that has been sent as a Facebook attachment - *Currently Incomplete!*
            </summary>
            <param name="uid"></param>
            <param name="filename"></param>
            <param name="url"></param>
            <param name="duration"></param>
            <param name="audio_type"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_ImageAttachment">
            <summary>
            Represents an image that has been sent as a Facebook attachment
            To retrieve the full image url, use: `fbchat-sharp.Client.fetchImageUrl`, and pass
            it the uid of the image attachment
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.original_extension">
            The extension of the original image (eg. 'png')
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.width">
            Width of original image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.height">
            Height of original image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.is_animated">
            Whether the image is animated
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.thumbnail_url">
            URL to a thumbnail of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.preview_url">
            URL to a medium preview of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.preview_width">
            Width of the medium preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.preview_height">
            Height of the medium preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.large_preview_url">
            URL to a large preview of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.large_preview_width">
            Width of the large preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.large_preview_height">
            Height of the large preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.animated_preview_url">
            URL to an animated preview of the image(eg. for gifs)
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.animated_preview_width">
            Width of the animated preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_ImageAttachment.animated_preview_height">
            Height of the animated preview image
        </member>
        <member name="M:fbchat_sharp.API.FB_ImageAttachment.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Represents an image that has been sent as a Facebook attachment
            </summary>
            <param name="uid"></param>
            <param name="original_extension"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="is_animated"></param>
            <param name="thumbnail_url"></param>
            <param name="preview"></param>
            <param name="large_preview"></param>
            <param name="animated_preview"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_VideoAttachment">
            <summary>
            Represents a video that has been sent as a Facebook attachment
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.size">
            Size of the original video in bytes
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.width">
            Width of original video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.height">
            Height of original video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.duration">
            Length of video in milliseconds
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.preview_url">
            URL to very compressed preview video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.small_image_url">
            URL to a small preview image of the video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.small_image_width">
            Width of the small preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.small_image_height">
            Height of the small preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.medium_image_url">
            URL to a medium preview image of the video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.medium_image_width">
            Width of the medium preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.medium_image_height">
            Height of the medium preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.large_image_url">
            URL to a large preview image of the video
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.large_image_width">
            Width of the large preview image
        </member>
        <member name="P:fbchat_sharp.API.FB_VideoAttachment.large_image_height">
            Height of the large preview image
        </member>
        <member name="M:fbchat_sharp.API.FB_VideoAttachment.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Represents a video that has been sent as a Facebook attachment
            </summary>
            <param name="uid"></param>
            <param name="size"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="duration"></param>
            <param name="preview_url"></param>
            <param name="small_image"></param>
            <param name="medium_image"></param>
            <param name="large_image"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_Group">
            <summary>
            Facebook messenger group class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.participants">
            Unique list (set) of the group thread"s participant user IDs
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.nicknames">
            Dict, containing user nicknames mapped to their IDs
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.color">
            A `ThreadColor`. The groups"s message color
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.emoji">
            The groups"s default emoji
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.admins">
            Set containing user IDs of thread admins
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.approval_mode">
            True if users need approval to join
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.approval_requests">
            Set containing user IDs requesting to join
        </member>
        <member name="P:fbchat_sharp.API.FB_Group.join_link">
            Link for joining group
        </member>
        <member name="M:fbchat_sharp.API.FB_Group.#ctor(System.String,System.String,System.String,System.Int32,System.String,fbchat_sharp.API.FB_Plan,System.Collections.Generic.ISet{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,Newtonsoft.Json.Linq.JToken,System.Collections.Generic.ISet{System.String},System.Boolean,System.Collections.Generic.ISet{System.String},System.String)">
            <summary>
            Represents a Facebook group. Inherits `Thread`
            </summary>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="message_count"></param>
            <param name="last_message_timestamp"></param>
            <param name="plan"></param>
            <param name="participants"></param>
            <param name="nicknames"></param>
            <param name="color"></param>
            <param name="emoji"></param>
            <param name="admins"></param>
            <param name="approval_mode"></param>
            <param name="approval_requests"></param>
            <param name="join_link"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Group.#ctor(System.String)">
            <summary>
            Represents a Facebook group. Inherits `Thread`
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_Room">
            <summary>
            Represents a Facebook room. Inherits `Group`
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Room.privacy_mode">
            True is room is not discoverable
        </member>
        <member name="M:fbchat_sharp.API.FB_Room.#ctor(System.String,System.String,System.String,System.Int32,System.String,fbchat_sharp.API.FB_Plan,System.Collections.Generic.ISet{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.ISet{System.String},System.Boolean,System.Collections.Generic.ISet{System.String},System.String,System.Boolean)">
            <summary>
            Represents a Facebook room. Inherits `Group`
            </summary>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="message_count"></param>
            <param name="last_message_timestamp"></param>
            <param name="plan"></param>
            <param name="participants"></param>
            <param name="nicknames"></param>
            <param name="color"></param>
            <param name="emoji"></param>
            <param name="admins"></param>
            <param name="approval_mode"></param>
            <param name="approval_requests"></param>
            <param name="join_link"></param>
            <param name="privacy_mode"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Room.#ctor(System.String)">
            <summary>
            Represents a Facebook room. Inherits `Group`
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_LocationAttachment">
            <summary>
            Represents a user location
            Latitude and longitude OR address is provided by Facebook
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.latitude">
            Latitude of the location
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.longitude">
            Longitude of the location
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.image_url">
            URL of image showing the map of the location
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.image_width">
            Width of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.image_height">
            Height of the image
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.url">
            URL to Bing maps with the location
        </member>
        <member name="P:fbchat_sharp.API.FB_LocationAttachment.address">
            Address of the location
        </member>
        <member name="M:fbchat_sharp.API.FB_LocationAttachment.#ctor(System.String,System.Double,System.Double,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Represents a user location
            Latitude and longitude OR address is provided by Facebook
            </summary>
            <param name="uid"></param>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="image_url"></param>
            <param name="image_width"></param>
            <param name="image_height"></param>
            <param name="url"></param>
            <param name="address"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_LiveLocationAttachment">
            <summary>
            Represents a live user location
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_LiveLocationAttachment.name">
            Name of the location
        </member>
        <member name="P:fbchat_sharp.API.FB_LiveLocationAttachment.expiration_time">
            Timestamp when live location expires
        </member>
        <member name="P:fbchat_sharp.API.FB_LiveLocationAttachment.is_expired">
            True if live location is expired
        </member>
        <member name="M:fbchat_sharp.API.FB_LiveLocationAttachment.#ctor(System.String,System.Double,System.Double,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Represents a live user location
            </summary>
            <param name="uid"></param>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="image_url"></param>
            <param name="image_width"></param>
            <param name="image_height"></param>
            <param name="url"></param>
            <param name="address"></param>
            <param name="name"></param>
            <param name="expiration_time"></param>
            <param name="is_expired"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_Marketplace">
            <summary>
            Facebook messenger marketplace class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.participants">
            Unique list (set) of the group thread"s participant user IDs
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.nicknames">
            Dict, containing user nicknames mapped to their IDs
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.color">
            A `ThreadColor`. The groups"s message color
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.emoji">
            The groups"s default emoji
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.admins">
            Set containing user IDs of thread admins
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.approval_mode">
            True if users need approval to join
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.approval_requests">
            Set containing user IDs requesting to join
        </member>
        <member name="P:fbchat_sharp.API.FB_Marketplace.join_link">
            Link for joining group
        </member>
        <member name="M:fbchat_sharp.API.FB_Marketplace.#ctor(System.String,System.String,System.String,System.Int32,System.String,fbchat_sharp.API.FB_Plan,System.Collections.Generic.ISet{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,Newtonsoft.Json.Linq.JToken,System.Collections.Generic.ISet{System.String},System.Boolean,System.Collections.Generic.ISet{System.String},System.String)">
            <summary>
            Represents a Facebook marketplace. Inherits `Thread`
            </summary>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="message_count"></param>
            <param name="last_message_timestamp"></param>
            <param name="plan"></param>
            <param name="participants"></param>
            <param name="nicknames"></param>
            <param name="color"></param>
            <param name="emoji"></param>
            <param name="admins"></param>
            <param name="approval_mode"></param>
            <param name="approval_requests"></param>
            <param name="join_link"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Marketplace.#ctor(System.String)">
            <summary>
            Represents a Facebook marketplace. Inherits `Thread`
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.EmojiSize">
            <summary>
            Used to specify the size of a sent emoji
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.MessageReaction">
            <summary>
            Used to specify a message reaction
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_Message_Constants">
            <summary>
            
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_Mention">
            <summary>
            Facebook messenger mention class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Mention.thread_id">
            The thread ID the mention is pointing at
        </member>
        <member name="P:fbchat_sharp.API.FB_Mention.offset">
            The character where the mention starts
        </member>
        <member name="P:fbchat_sharp.API.FB_Mention.length">
            The length of the mention
        </member>
        <member name="M:fbchat_sharp.API.FB_Mention.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Represents a @mention
            </summary>
            <param name="thread_id"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Mention.ToString">
            <returns>Pretty string representation of the thread</returns>
        </member>
        <member name="T:fbchat_sharp.API.FB_Message">
            <summary>
            Facebook messenger message class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.text">
            The actual message
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.mentions">
            A list of :class:`Mention` objects
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.emoji_size">
            A :class:`EmojiSize`. Size of a sent emoji
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.uid">
            The message ID
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.author">
            ID of the sender
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.timestamp">
            Timestamp of when the message was sent
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.is_read">
            Whether the message is read
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.read_by">
            A list of pepole IDs who read the message, works only with :func:`fbchat-sharp.Client.fetchThreadMessages`
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.reactions">
            A dict with user's IDs as keys, and their :class:`MessageReaction` as values
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.sticker">
            An ID of a sent sticker
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.attachments">
            A list of attachments
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.quick_replies">
            A list of :class:`QuickReply`
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.unsent">
            Whether the message is unsent (deleted for everyone)
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.reply_to_id">
            Message ID you want to reply to
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.replied_to">
            Replied message
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.forwarded">
            Whether the message was forwarded
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.is_from_me">
            The message was sent from me (not filled)
        </member>
        <member name="P:fbchat_sharp.API.FB_Message.thread_id">
            The thread this message belong to (not in fbchat)
        </member>
        <member name="M:fbchat_sharp.API.FB_Message.#ctor(System.String,System.Collections.Generic.List{fbchat_sharp.API.FB_Mention},System.Nullable{fbchat_sharp.API.EmojiSize},System.String,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,fbchat_sharp.API.MessageReaction},fbchat_sharp.API.FB_Sticker,System.Collections.Generic.List{fbchat_sharp.API.FB_Attachment},System.Collections.Generic.List{fbchat_sharp.API.FB_QuickReply},System.Boolean,System.String,fbchat_sharp.API.FB_Message,System.Boolean,System.Boolean,System.String)">
            <summary>
            Facebook messenger message class
            </summary>
            <param name="text"></param>
            <param name="mentions"></param>
            <param name="emoji_size"></param>
            <param name="uid"></param>
            <param name="author"></param>
            <param name="timestamp"></param>
            <param name="is_read"></param>
            <param name="read_by"></param>
            <param name="reactions"></param>
            <param name="sticker"></param>
            <param name="attachments"></param>
            <param name="quick_replies"></param>
            <param name="unsent"></param>
            <param name="reply_to_id"></param>
            <param name="replied_to"></param>
            <param name="forwarded"></param>
            <param name="is_from_me"></param>
            <param name="thread_id"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Message.ToString">
            <returns>Pretty string representation of the thread</returns>
        </member>
        <member name="M:fbchat_sharp.API.FB_Message.formatMentions(System.String)">
            <summary>
            Like `str.format`, but takes tuples with a thread id and text instead.
            Returns a `Message` object, with the formatted string and relevant mentions.
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_Page">
            <summary>
            Facebook messenger page class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Page.url">
            The page's custom url
        </member>
        <member name="P:fbchat_sharp.API.FB_Page.city">
            The name of the page's location city
        </member>
        <member name="P:fbchat_sharp.API.FB_Page.likes">
            Amount of likes the page has
        </member>
        <member name="P:fbchat_sharp.API.FB_Page.sub_title">
            Some extra information about the page
        </member>
        <member name="P:fbchat_sharp.API.FB_Page.category">
            The page's category
        </member>
        <member name="M:fbchat_sharp.API.FB_Page.#ctor(System.String,System.String,System.String,System.Int32,fbchat_sharp.API.FB_Plan,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Represents a Facebook page. Inherits `Thread`
            </summary>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="message_count"></param>
            <param name="plan"></param>
            <param name="url"></param>
            <param name="city"></param>
            <param name="likes"></param>
            <param name="sub_title"></param>
            <param name="category"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_Page.#ctor(System.String)">
            <summary>
            Represents a Facebook page. Inherits `Thread`
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_Plan_Constants">
            <summary>
            
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_Plan">
            <summary>
            Represents a plan
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.uid">
            ID of the plan
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.time">
            Plan time (unix time stamp), only precise down to the minute
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.title">
            Plan title
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.location">
            Plan location name
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.location_id">
            Plan location ID
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.author_id">
            ID of the plan creator
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.guests">
            Dict of `User` IDs mapped to their `GuestStatus`
        </member>
        <member name="M:fbchat_sharp.API.FB_Plan.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,fbchat_sharp.API.GuestStatus})">
            <summary>
            Represents a plan
            </summary>
            <param name="uid"></param>
            <param name="time"></param>
            <param name="title"></param>
            <param name="location"></param>
            <param name="location_id"></param>
            <param name="author_id"></param>
            <param name="guests"></param>
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.going">
            List of the `User` IDs who will take part in the plan.
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.declined">
            List of the `User` IDs who won't take part in the plan.
        </member>
        <member name="P:fbchat_sharp.API.FB_Plan.invited">
            List of the `User` IDs who are invited to the plan.
        </member>
        <member name="T:fbchat_sharp.API.FB_Poll">
            <summary>
            Represents a poll
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Poll.title">
            Title of the poll
        </member>
        <member name="P:fbchat_sharp.API.FB_Poll.options">
            List of :class:`PollOption`, can be fetched with :func:`fbchat-sharp.Client.fetchPollOptions`
        </member>
        <member name="P:fbchat_sharp.API.FB_Poll.options_count">
            Options count
        </member>
        <member name="P:fbchat_sharp.API.FB_Poll.uid">
            ID of the poll
        </member>
        <member name="M:fbchat_sharp.API.FB_Poll.#ctor(System.String,System.Collections.Generic.List{fbchat_sharp.API.FB_PollOption},System.Int32,System.String)">
            <summary>
            Represents a poll
            </summary>
            <param name="title"></param>
            <param name="options"></param>
            <param name="options_count"></param>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_PollOption">
            <summary>
            Represents a poll option
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_PollOption.text">
            Text of the poll option
        </member>
        <member name="P:fbchat_sharp.API.FB_PollOption.vote">
            Whether vote when creating or client voted
        </member>
        <member name="P:fbchat_sharp.API.FB_PollOption.voters">
            ID of the users who voted for this poll option
        </member>
        <member name="P:fbchat_sharp.API.FB_PollOption.votes_count">
            Votes count
        </member>
        <member name="P:fbchat_sharp.API.FB_PollOption.uid">
            ID of the poll option
        </member>
        <member name="M:fbchat_sharp.API.FB_PollOption.#ctor(System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Int32,System.String)">
            <summary>
            Represents a poll option
            </summary>
            <param name="text"></param>
            <param name="vote"></param>
            <param name="voters"></param>
            <param name="votes_count"></param>
            <param name="uid"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_QuickReply">
            <summary>
            Represents a quick reply 
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReply.payload">
            Payload of the quick reply
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReply.external_payload">
            External payload for responses
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReply.data">
            Additional data
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReply.is_response">
            Whether it's a response for a quick reply
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReply._type">
            Type of the quick reply
        </member>
        <member name="M:fbchat_sharp.API.FB_QuickReply.#ctor(System.Nullable{fbchat_sharp.API.QuickReplyType},Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.Boolean)">
            <summary>
            Represents a quick reply 
            </summary>
            <param name="_type"></param>
            <param name="payload"></param>
            <param name="external_payload"></param>
            <param name="data"></param>
            <param name="is_response"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_QuickReplyText">
            <summary>
            Represents a text quick reply 
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReplyText.title">
            Title of the quick reply
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReplyText.image_url">
            URL of the quick reply image (optional)
        </member>
        <member name="M:fbchat_sharp.API.FB_QuickReplyText.#ctor(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.Boolean,System.String,System.String)">
            <summary>
            Represents a text quick reply 
            </summary>
            <param name="payload"></param>
            <param name="external_payload"></param>
            <param name="data"></param>
            <param name="is_response"></param>
            <param name="title"></param>
            <param name="image_url"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_QuickReplyLocation">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.FB_QuickReplyLocation.#ctor(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.Boolean)">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
            <param name="payload"></param>
            <param name="external_payload"></param>
            <param name="data"></param>
            <param name="is_response"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_QuickReplyPhoneNumber">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReplyPhoneNumber.image_url">
            URL of the quick reply image (optional)
        </member>
        <member name="M:fbchat_sharp.API.FB_QuickReplyPhoneNumber.#ctor(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.Boolean,System.String)">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
            <param name="payload"></param>
            <param name="external_payload"></param>
            <param name="data"></param>
            <param name="is_response"></param>
            <param name="image_url"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_QuickReplyEmail">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_QuickReplyEmail.image_url">
            URL of the quick reply image (optional)
        </member>
        <member name="M:fbchat_sharp.API.FB_QuickReplyEmail.#ctor(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.Boolean,System.String)">
            <summary>
            Represents a location quick reply (Doesn't work on mobile)
            </summary>
            <param name="payload"></param>
            <param name="external_payload"></param>
            <param name="data"></param>
            <param name="is_response"></param>
            <param name="image_url"></param>
        </member>
        <member name="T:fbchat_sharp.API.FB_Sticker">
            <summary>
            Represents a Facebook sticker that has been sent to a Facebook thread as an attachment
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.pack">
            The sticker-pack's ID
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.is_animated">
            Whether the sticker is animated
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.medium_sprite_image">
            If the sticker is animated, the following should be present
            URL to a medium spritemap
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.large_sprite_image">
            URL to a large spritemap
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.frames_per_row">
            The amount of frames present in the spritemap pr. row
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.frames_per_col">
            The amount of frames present in the spritemap pr. coloumn
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.frame_rate">
            The frame rate the spritemap is intended to be played in
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.url">
            URL to the sticker's image
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.width">
            Width of the sticker
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.height">
            Height of the sticker
        </member>
        <member name="P:fbchat_sharp.API.FB_Sticker.label">
            The sticker's label/name
        </member>
        <member name="T:fbchat_sharp.API.ThreadType">
            <summary>
            Used to specify what type of Facebook thread is being used
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.ThreadLocation">
            <summary>
            Used to specify where a thread is located (inbox, pending, archived, other).
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.ThreadColor">
            <summary>
            Used to specify a thread colors
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_Thread">
            <summary>
            Facebook messenger thread class
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.uid">
            The unique identifier of the thread. Can be used a `thread_id`. See :ref:`intro_threads` for more info
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.type">
            Specifies the type of thread. Can be used a `thread_type`. See :ref:`intro_threads` for more info
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.photo">
            The thread"s picture
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.name">
            The name of the thread
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.last_message_timestamp">
            Timestamp of last message
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.message_count">
            Number of messages in the thread
        </member>
        <member name="P:fbchat_sharp.API.FB_Thread.plan">
            Set :class:`Plan`
        </member>
        <member name="M:fbchat_sharp.API.FB_Thread.#ctor(fbchat_sharp.API.ThreadType,System.String,System.String,System.String,System.String,System.Int32,fbchat_sharp.API.FB_Plan)">
            <summary>
            Represents a Facebook thread
            </summary>
            <param name="type"></param>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="last_message_timestamp"></param>
            <param name="message_count"></param>
            <param name="plan"></param>
        </member>
        <member name="T:fbchat_sharp.API.GENDER">
            <summary>
            
            </summary>
        </member>
        <member name="F:fbchat_sharp.API.GENDER.standard_GENDERS">
            <summary>
            For standard requests
            </summary>
        </member>
        <member name="F:fbchat_sharp.API.GENDER.graphql_GENDERS">
            <summary>
            For graphql requests
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.TypingStatus">
            <summary>
            Used to specify whether the user is typing or has stopped typing
            </summary>
        </member>
        <member name="T:fbchat_sharp.API.FB_User">
            <summary>
            Represents a Facebook user. Inherits `Thread`
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_User.url">
            The profile url
        </member>
        <member name="P:fbchat_sharp.API.FB_User.first_name">
            The users first name
        </member>
        <member name="P:fbchat_sharp.API.FB_User.last_name">
            The users last name
        </member>
        <member name="P:fbchat_sharp.API.FB_User.is_friend">
            Whether the user and the client are friends
        </member>
        <member name="P:fbchat_sharp.API.FB_User.gender">
            The user"s gender
        </member>
        <member name="P:fbchat_sharp.API.FB_User.affinity">
            From 0 to 1. How close the client is to the user
        </member>
        <member name="P:fbchat_sharp.API.FB_User.nickname">
            The user"s nickname
        </member>
        <member name="P:fbchat_sharp.API.FB_User.own_nickname">
            The clients nickname, as seen by the user
        </member>
        <member name="P:fbchat_sharp.API.FB_User.color">
            A :class:`ThreadColor`. The message color
        </member>
        <member name="P:fbchat_sharp.API.FB_User.emoji">
            The default emoji
        </member>
        <member name="M:fbchat_sharp.API.FB_User.#ctor(System.String,System.String,System.String,System.Int32,System.String,fbchat_sharp.API.FB_Plan,System.String,System.String,System.String,System.Boolean,System.String,System.Single,System.String,System.String,System.String,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Represents a Facebook user. Inherits `Thread`
            </summary>
            <param name="uid"></param>
            <param name="photo"></param>
            <param name="name"></param>
            <param name="message_count"></param>
            <param name="last_message_timestamp"></param>
            <param name="plan"></param>
            <param name="url"></param>
            <param name="first_name"></param>
            <param name="last_name"></param>
            <param name="is_friend"></param>
            <param name="gender"></param>
            <param name="affinity"></param>
            <param name="nickname"></param>
            <param name="own_nickname"></param>
            <param name="color"></param>
            <param name="emoji"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_User.#ctor(System.String)">
            <summary>
            Represents a Facebook user. Inherits `Thread`
            </summary>
            <param name="uid"></param>
        </member>
        <member name="M:fbchat_sharp.API.FB_User.ToString">
            <returns>Pretty string representation of the thread</returns>
        </member>
        <member name="T:fbchat_sharp.API.FB_ActiveStatus">
            <summary>
            User active status
            </summary>
        </member>
        <member name="P:fbchat_sharp.API.FB_ActiveStatus.active">
            Whether the user is active now
        </member>
        <member name="P:fbchat_sharp.API.FB_ActiveStatus.last_active">
            Timestamp when the user was last active
        </member>
        <member name="P:fbchat_sharp.API.FB_ActiveStatus.in_game">
            Whether the user is playing Messenger game now
        </member>
        <member name="M:fbchat_sharp.API.FB_ActiveStatus.#ctor(System.Boolean,System.String,System.Boolean)">
            <summary>
            User active status
            </summary>
            <param name="active"></param>
            <param name="last_active"></param>
            <param name="in_game"></param>
        </member>
        <member name="T:fbchat_sharp.API.MessengerClient">
            <summary>
            Facebook Client wrapper class. Library users should use this class
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.TryLogin">
            <summary>
            Loads sessions cookies calling ReadCookiesFromDiskAsync and tries to login.
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.DoLogin(System.String,System.String)">
            <summary>
            Tries to login using provided email and password.
            </summary>
            <param name="email">User facebook email</param>
            <param name="password">User facebook password</param>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.DoLogout">
            <summary>
            Deletes session cookies calling DeleteCookiesAsync and logs out the client
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.GetUserUid">
            <returns>Returns the user id or null if not logged in</returns>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.StartListening(System.Boolean)">
            <summary>
            Starts listening for messenger updates (e.g. a new message) on a background thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.StopListening">
            <summary>
            Stops listening thread
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.WriteCookiesAsync">
            <summary>
            Gets the client's session cookies and saves them to disk calling WriteCookiesToDiskAsync
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.Log(System.String,System.String)">
            <summary>
            Logs a message to console
            </summary>
            <param name="message">Message to log</param>
            <param name="method">Name of the caller method</param>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.Set2FACallback(System.Func{System.Threading.Tasks.Task{System.String}})">
            <summary>
            Use this to set the callback for providing a 2FA code
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.on2FACode">
            <summary>
            Called when a 2FA code is requested
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.DeleteCookiesAsync">
            <summary>
            How to delete saved cookies from disk
            </summary>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.WriteCookiesToDiskAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Net.Cookie}})">
            <summary>
            How to save a list of cookies to disk
            </summary>
            <param name="cookieJar">List of session cookies</param>
        </member>
        <member name="M:fbchat_sharp.API.MessengerClient.ReadCookiesFromDiskAsync">
            <summary>
            How to load a list of saved cookies
            </summary>
        </member>
        <member name="T:MimeMapping.KnownMimeTypes">
            <summary>
             MIME type constants. Last updated on 2017-08-18T19:21:28Z. 
             Generated from the <a href="http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types">apache</a> and <a href="https://raw.githubusercontent.com/h5bp/server-configs-nginx/master/mime.types">nginx</a> sources
            </summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ez">
            <summary>ez</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aw">
            <summary>aw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Atom">
            <summary>atom</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Atomcat">
            <summary>atomcat</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Atomsvc">
            <summary>atomsvc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ccxml">
            <summary>ccxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdmia">
            <summary>cdmia</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdmic">
            <summary>cdmic</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdmid">
            <summary>cdmid</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdmio">
            <summary>cdmio</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdmiq">
            <summary>cdmiq</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cu">
            <summary>cu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Davmount">
            <summary>davmount</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dbk">
            <summary>dbk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dssc">
            <summary>dssc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xdssc">
            <summary>xdssc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ecma">
            <summary>ecma</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Emma">
            <summary>emma</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Epub">
            <summary>epub</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Exi">
            <summary>exi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pfr">
            <summary>pfr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Woff">
            <summary>woff</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gml">
            <summary>gml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gpx">
            <summary>gpx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gxf">
            <summary>gxf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Stk">
            <summary>stk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ink">
            <summary>ink</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Inkml">
            <summary>inkml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ipfix">
            <summary>ipfix</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jar">
            <summary>jar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ser">
            <summary>ser</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Class">
            <summary>class</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Js">
            <summary>js</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Json">
            <summary>json</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jsonml">
            <summary>jsonml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lostxml">
            <summary>lostxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hqx">
            <summary>hqx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cpt">
            <summary>cpt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mads">
            <summary>mads</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mrc">
            <summary>mrc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mrcx">
            <summary>mrcx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ma">
            <summary>ma</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nb">
            <summary>nb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mb">
            <summary>mb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mathml">
            <summary>mathml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mbox">
            <summary>mbox</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mscml">
            <summary>mscml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Metalink">
            <summary>metalink</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Meta4">
            <summary>meta4</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mets">
            <summary>mets</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mods">
            <summary>mods</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M21">
            <summary>m21</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp21">
            <summary>mp21</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp4s">
            <summary>mp4s</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Doc">
            <summary>doc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dot">
            <summary>dot</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mxf">
            <summary>mxf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bin">
            <summary>bin</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dms">
            <summary>dms</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lrf">
            <summary>lrf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mar">
            <summary>mar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.So">
            <summary>so</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dist">
            <summary>dist</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Distz">
            <summary>distz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pkg">
            <summary>pkg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bpk">
            <summary>bpk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dump">
            <summary>dump</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Elc">
            <summary>elc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Deploy">
            <summary>deploy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oda">
            <summary>oda</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Opf">
            <summary>opf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ogx">
            <summary>ogx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Omdoc">
            <summary>omdoc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Onetoc">
            <summary>onetoc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Onetoc2">
            <summary>onetoc2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Onetmp">
            <summary>onetmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Onepkg">
            <summary>onepkg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oxps">
            <summary>oxps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xer">
            <summary>xer</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pdf">
            <summary>pdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pgp">
            <summary>pgp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Asc">
            <summary>asc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sig">
            <summary>sig</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Prf">
            <summary>prf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P10">
            <summary>p10</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P7m">
            <summary>p7m</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P7c">
            <summary>p7c</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P7s">
            <summary>p7s</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P8">
            <summary>p8</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ac">
            <summary>ac</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cer">
            <summary>cer</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Crl">
            <summary>crl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pkipath">
            <summary>pkipath</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pki">
            <summary>pki</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pls">
            <summary>pls</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ai">
            <summary>ai</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Eps">
            <summary>eps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ps">
            <summary>ps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cww">
            <summary>cww</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pskcxml">
            <summary>pskcxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rdf">
            <summary>rdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rif">
            <summary>rif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rnc">
            <summary>rnc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rl">
            <summary>rl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rld">
            <summary>rld</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rs">
            <summary>rs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gbr">
            <summary>gbr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mft">
            <summary>mft</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Roa">
            <summary>roa</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rsd">
            <summary>rsd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rss">
            <summary>rss</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rtf">
            <summary>rtf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sbml">
            <summary>sbml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Scq">
            <summary>scq</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Scs">
            <summary>scs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spq">
            <summary>spq</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spp">
            <summary>spp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdp">
            <summary>sdp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Setpay">
            <summary>setpay</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Setreg">
            <summary>setreg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Shf">
            <summary>shf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Smi">
            <summary>smi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Smil">
            <summary>smil</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rq">
            <summary>rq</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Srx">
            <summary>srx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gram">
            <summary>gram</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Grxml">
            <summary>grxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sru">
            <summary>sru</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ssdl">
            <summary>ssdl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ssml">
            <summary>ssml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tei">
            <summary>tei</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Teicorpus">
            <summary>teicorpus</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tfi">
            <summary>tfi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tsd">
            <summary>tsd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Plb">
            <summary>plb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Psb">
            <summary>psb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pvb">
            <summary>pvb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tcap">
            <summary>tcap</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pwn">
            <summary>pwn</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aso">
            <summary>aso</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Imp">
            <summary>imp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Acu">
            <summary>acu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Atc">
            <summary>atc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Acutc">
            <summary>acutc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Air">
            <summary>air</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fcdt">
            <summary>fcdt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fxp">
            <summary>fxp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fxpl">
            <summary>fxpl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xdp">
            <summary>xdp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xfdf">
            <summary>xfdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ahead">
            <summary>ahead</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Azf">
            <summary>azf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Azs">
            <summary>azs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Azw">
            <summary>azw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Acc">
            <summary>acc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ami">
            <summary>ami</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Apk">
            <summary>apk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cii">
            <summary>cii</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fti">
            <summary>fti</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Atx">
            <summary>atx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpkg">
            <summary>mpkg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M3u8">
            <summary>m3u8</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Swi">
            <summary>swi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Iota">
            <summary>iota</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aep">
            <summary>aep</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpm">
            <summary>mpm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bmi">
            <summary>bmi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rep">
            <summary>rep</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdxml">
            <summary>cdxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mmd">
            <summary>mmd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdy">
            <summary>cdy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cla">
            <summary>cla</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rp9">
            <summary>rp9</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C4g">
            <summary>c4g</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C4d">
            <summary>c4d</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C4f">
            <summary>c4f</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C4p">
            <summary>c4p</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C4u">
            <summary>c4u</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C11amc">
            <summary>c11amc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C11amz">
            <summary>c11amz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Csp">
            <summary>csp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdbcmsg">
            <summary>cdbcmsg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cmc">
            <summary>cmc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clkx">
            <summary>clkx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clkk">
            <summary>clkk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clkp">
            <summary>clkp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clkt">
            <summary>clkt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clkw">
            <summary>clkw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wbs">
            <summary>wbs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pml">
            <summary>pml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppd">
            <summary>ppd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Car">
            <summary>car</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pcurl">
            <summary>pcurl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dart">
            <summary>dart</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rdz">
            <summary>rdz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvf">
            <summary>uvf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvf">
            <summary>uvvf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvd">
            <summary>uvd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvd">
            <summary>uvvd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvt">
            <summary>uvt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvt">
            <summary>uvvt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvx">
            <summary>uvx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvx">
            <summary>uvvx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvz">
            <summary>uvz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvz">
            <summary>uvvz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Felaunch">
            <summary>fe_launch</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dna">
            <summary>dna</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mlp">
            <summary>mlp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dpg">
            <summary>dpg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dfac">
            <summary>dfac</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kpxx">
            <summary>kpxx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ait">
            <summary>ait</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Svc">
            <summary>svc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Geo">
            <summary>geo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mag">
            <summary>mag</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nml">
            <summary>nml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Esf">
            <summary>esf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msf">
            <summary>msf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qam">
            <summary>qam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Slt">
            <summary>slt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ssf">
            <summary>ssf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Es3">
            <summary>es3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Et3">
            <summary>et3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ez2">
            <summary>ez2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ez3">
            <summary>ez3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fdf">
            <summary>fdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mseed">
            <summary>mseed</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Seed">
            <summary>seed</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dataless">
            <summary>dataless</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gph">
            <summary>gph</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ftc">
            <summary>ftc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fm">
            <summary>fm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Frame">
            <summary>frame</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Maker">
            <summary>maker</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Book">
            <summary>book</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fnc">
            <summary>fnc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ltf">
            <summary>ltf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fsc">
            <summary>fsc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oas">
            <summary>oas</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oa2">
            <summary>oa2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oa3">
            <summary>oa3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fg5">
            <summary>fg5</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bh2">
            <summary>bh2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ddd">
            <summary>ddd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xdw">
            <summary>xdw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xbd">
            <summary>xbd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fzs">
            <summary>fzs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Txd">
            <summary>txd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ggb">
            <summary>ggb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ggt">
            <summary>ggt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gex">
            <summary>gex</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gre">
            <summary>gre</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gxt">
            <summary>gxt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.G2w">
            <summary>g2w</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.G3w">
            <summary>g3w</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gmx">
            <summary>gmx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kml">
            <summary>kml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kmz">
            <summary>kmz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gqf">
            <summary>gqf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gqs">
            <summary>gqs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gac">
            <summary>gac</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ghf">
            <summary>ghf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gim">
            <summary>gim</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Grv">
            <summary>grv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gtm">
            <summary>gtm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tpl">
            <summary>tpl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcg">
            <summary>vcg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hal">
            <summary>hal</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Zmm">
            <summary>zmm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hbci">
            <summary>hbci</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Les">
            <summary>les</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hpgl">
            <summary>hpgl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hpid">
            <summary>hpid</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hps">
            <summary>hps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jlt">
            <summary>jlt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pcl">
            <summary>pcl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pclxl">
            <summary>pclxl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sfdhdstx">
            <summary>sfd-hdstx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpy">
            <summary>mpy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Afp">
            <summary>afp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Listafp">
            <summary>listafp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.List3820">
            <summary>list3820</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Irm">
            <summary>irm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sc">
            <summary>sc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Icc">
            <summary>icc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Icm">
            <summary>icm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Igl">
            <summary>igl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ivp">
            <summary>ivp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ivu">
            <summary>ivu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Igm">
            <summary>igm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpw">
            <summary>xpw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpx">
            <summary>xpx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.I2g">
            <summary>i2g</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qbo">
            <summary>qbo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qfx">
            <summary>qfx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rcprofile">
            <summary>rcprofile</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Irp">
            <summary>irp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpr">
            <summary>xpr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fcs">
            <summary>fcs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jam">
            <summary>jam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rms">
            <summary>rms</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jisp">
            <summary>jisp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Joda">
            <summary>joda</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ktz">
            <summary>ktz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ktr">
            <summary>ktr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Karbon">
            <summary>karbon</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Chrt">
            <summary>chrt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kfo">
            <summary>kfo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Flw">
            <summary>flw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kon">
            <summary>kon</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kpr">
            <summary>kpr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kpt">
            <summary>kpt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ksp">
            <summary>ksp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kwd">
            <summary>kwd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kwt">
            <summary>kwt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Htke">
            <summary>htke</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kia">
            <summary>kia</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kne">
            <summary>kne</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Knp">
            <summary>knp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Skp">
            <summary>skp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Skd">
            <summary>skd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Skt">
            <summary>skt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Skm">
            <summary>skm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sse">
            <summary>sse</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lasxml">
            <summary>lasxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lbd">
            <summary>lbd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lbe">
            <summary>lbe</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._123">
            <summary>123</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Apr">
            <summary>apr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pre">
            <summary>pre</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nsf">
            <summary>nsf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Org">
            <summary>org</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Scm">
            <summary>scm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lwp">
            <summary>lwp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Portpkg">
            <summary>portpkg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mcd">
            <summary>mcd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mc1">
            <summary>mc1</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdkey">
            <summary>cdkey</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mwf">
            <summary>mwf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mfm">
            <summary>mfm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Flo">
            <summary>flo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Igx">
            <summary>igx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mif">
            <summary>mif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Daf">
            <summary>daf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dis">
            <summary>dis</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mbk">
            <summary>mbk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mqy">
            <summary>mqy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msl">
            <summary>msl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Plc">
            <summary>plc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Txf">
            <summary>txf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpn">
            <summary>mpn</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpc">
            <summary>mpc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xul">
            <summary>xul</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cil">
            <summary>cil</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cab">
            <summary>cab</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xls">
            <summary>xls</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlm">
            <summary>xlm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xla">
            <summary>xla</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlc">
            <summary>xlc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlt">
            <summary>xlt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlw">
            <summary>xlw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlam">
            <summary>xlam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlsb">
            <summary>xlsb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlsm">
            <summary>xlsm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xltm">
            <summary>xltm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Eot">
            <summary>eot</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Chm">
            <summary>chm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ims">
            <summary>ims</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lrm">
            <summary>lrm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Thmx">
            <summary>thmx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cat">
            <summary>cat</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Stl">
            <summary>stl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppt">
            <summary>ppt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pps">
            <summary>pps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pot">
            <summary>pot</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppam">
            <summary>ppam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pptm">
            <summary>pptm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sldm">
            <summary>sldm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppsm">
            <summary>ppsm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Potm">
            <summary>potm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpp">
            <summary>mpp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpt">
            <summary>mpt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Docm">
            <summary>docm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dotm">
            <summary>dotm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wps">
            <summary>wps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wks">
            <summary>wks</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wcm">
            <summary>wcm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wdb">
            <summary>wdb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wpl">
            <summary>wpl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xps">
            <summary>xps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mseq">
            <summary>mseq</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mus">
            <summary>mus</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msty">
            <summary>msty</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Taglet">
            <summary>taglet</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nlu">
            <summary>nlu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ntf">
            <summary>ntf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nitf">
            <summary>nitf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nnd">
            <summary>nnd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nns">
            <summary>nns</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nnw">
            <summary>nnw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ngdat">
            <summary>ngdat</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ngage">
            <summary>n-gage</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rpst">
            <summary>rpst</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rpss">
            <summary>rpss</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Edm">
            <summary>edm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Edx">
            <summary>edx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ext">
            <summary>ext</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odc">
            <summary>odc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Otc">
            <summary>otc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odb">
            <summary>odb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odf">
            <summary>odf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odft">
            <summary>odft</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odg">
            <summary>odg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Otg">
            <summary>otg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odi">
            <summary>odi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oti">
            <summary>oti</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odp">
            <summary>odp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Otp">
            <summary>otp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ods">
            <summary>ods</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ots">
            <summary>ots</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odt">
            <summary>odt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Odm">
            <summary>odm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ott">
            <summary>ott</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oth">
            <summary>oth</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xo">
            <summary>xo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dd2">
            <summary>dd2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oxt">
            <summary>oxt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pptx">
            <summary>pptx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sldx">
            <summary>sldx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppsx">
            <summary>ppsx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Potx">
            <summary>potx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlsx">
            <summary>xlsx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xltx">
            <summary>xltx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Docx">
            <summary>docx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dotx">
            <summary>dotx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mgp">
            <summary>mgp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dp">
            <summary>dp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Esa">
            <summary>esa</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pdb">
            <summary>pdb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pqa">
            <summary>pqa</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oprc">
            <summary>oprc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Paw">
            <summary>paw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Str">
            <summary>str</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ei6">
            <summary>ei6</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Efif">
            <summary>efif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wg">
            <summary>wg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Plf">
            <summary>plf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pbd">
            <summary>pbd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Box">
            <summary>box</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mgz">
            <summary>mgz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qps">
            <summary>qps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ptid">
            <summary>ptid</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qxd">
            <summary>qxd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qxt">
            <summary>qxt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qwd">
            <summary>qwd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qwt">
            <summary>qwt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qxl">
            <summary>qxl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qxb">
            <summary>qxb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bed">
            <summary>bed</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mxl">
            <summary>mxl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Musicxml">
            <summary>musicxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cryptonote">
            <summary>cryptonote</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cod">
            <summary>cod</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rm">
            <summary>rm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rmvb">
            <summary>rmvb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Link66">
            <summary>link66</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.St">
            <summary>st</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.See">
            <summary>see</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sema">
            <summary>sema</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Semd">
            <summary>semd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Semf">
            <summary>semf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ifm">
            <summary>ifm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Itp">
            <summary>itp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Iif">
            <summary>iif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ipk">
            <summary>ipk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Twd">
            <summary>twd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Twds">
            <summary>twds</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mmf">
            <summary>mmf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Teacher">
            <summary>teacher</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdkm">
            <summary>sdkm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdkd">
            <summary>sdkd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dxp">
            <summary>dxp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sfs">
            <summary>sfs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdc">
            <summary>sdc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sda">
            <summary>sda</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdd">
            <summary>sdd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Smf">
            <summary>smf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sdw">
            <summary>sdw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vor">
            <summary>vor</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sgl">
            <summary>sgl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Smzip">
            <summary>smzip</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sm">
            <summary>sm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxc">
            <summary>sxc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Stc">
            <summary>stc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxd">
            <summary>sxd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Std">
            <summary>std</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxi">
            <summary>sxi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sti">
            <summary>sti</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxm">
            <summary>sxm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxw">
            <summary>sxw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sxg">
            <summary>sxg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Stw">
            <summary>stw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sus">
            <summary>sus</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Susp">
            <summary>susp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Svd">
            <summary>svd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sis">
            <summary>sis</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sisx">
            <summary>sisx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xsm">
            <summary>xsm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bdm">
            <summary>bdm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xdm">
            <summary>xdm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tao">
            <summary>tao</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pcap">
            <summary>pcap</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cap">
            <summary>cap</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dmp">
            <summary>dmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tmo">
            <summary>tmo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tpt">
            <summary>tpt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mxs">
            <summary>mxs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tra">
            <summary>tra</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ufd">
            <summary>ufd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ufdl">
            <summary>ufdl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Utz">
            <summary>utz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Umj">
            <summary>umj</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Unityweb">
            <summary>unityweb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uoml">
            <summary>uoml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcx">
            <summary>vcx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vsd">
            <summary>vsd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vst">
            <summary>vst</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vss">
            <summary>vss</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vsw">
            <summary>vsw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vis">
            <summary>vis</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vsf">
            <summary>vsf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wbxml">
            <summary>wbxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmlc">
            <summary>wmlc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmlsc">
            <summary>wmlsc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wtb">
            <summary>wtb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nbp">
            <summary>nbp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wpd">
            <summary>wpd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wqd">
            <summary>wqd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Stf">
            <summary>stf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xar">
            <summary>xar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xfdl">
            <summary>xfdl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hvd">
            <summary>hvd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hvs">
            <summary>hvs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hvp">
            <summary>hvp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Osf">
            <summary>osf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Osfpvg">
            <summary>osfpvg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Saf">
            <summary>saf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spf">
            <summary>spf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cmp">
            <summary>cmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Zir">
            <summary>zir</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Zirz">
            <summary>zirz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Zaz">
            <summary>zaz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vxml">
            <summary>vxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wgt">
            <summary>wgt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hlp">
            <summary>hlp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wsdl">
            <summary>wsdl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wspolicy">
            <summary>wspolicy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._7z">
            <summary>7z</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Abw">
            <summary>abw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ace">
            <summary>ace</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dmg">
            <summary>dmg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aab">
            <summary>aab</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X32">
            <summary>x32</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.U32">
            <summary>u32</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vox">
            <summary>vox</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aam">
            <summary>aam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aas">
            <summary>aas</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bcpio">
            <summary>bcpio</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Torrent">
            <summary>torrent</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Blb">
            <summary>blb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Blorb">
            <summary>blorb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bz">
            <summary>bz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bz2">
            <summary>bz2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Boz">
            <summary>boz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cbr">
            <summary>cbr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cba">
            <summary>cba</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cbt">
            <summary>cbt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cbz">
            <summary>cbz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cb7">
            <summary>cb7</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcd">
            <summary>vcd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cfs">
            <summary>cfs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Chat">
            <summary>chat</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pgn">
            <summary>pgn</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nsc">
            <summary>nsc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cpio">
            <summary>cpio</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Csh">
            <summary>csh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Deb">
            <summary>deb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Udeb">
            <summary>udeb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dgc">
            <summary>dgc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dir">
            <summary>dir</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dcr">
            <summary>dcr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dxr">
            <summary>dxr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cst">
            <summary>cst</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cct">
            <summary>cct</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cxt">
            <summary>cxt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.W3d">
            <summary>w3d</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fgd">
            <summary>fgd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Swa">
            <summary>swa</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wad">
            <summary>wad</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ncx">
            <summary>ncx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dtb">
            <summary>dtb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Res">
            <summary>res</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dvi">
            <summary>dvi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Evy">
            <summary>evy</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Eva">
            <summary>eva</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bdf">
            <summary>bdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gsf">
            <summary>gsf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Psf">
            <summary>psf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Otf">
            <summary>otf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pcf">
            <summary>pcf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Snf">
            <summary>snf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ttf">
            <summary>ttf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ttc">
            <summary>ttc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pfa">
            <summary>pfa</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pfb">
            <summary>pfb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pfm">
            <summary>pfm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Afm">
            <summary>afm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Arc">
            <summary>arc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spl">
            <summary>spl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gca">
            <summary>gca</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ulx">
            <summary>ulx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gnumeric">
            <summary>gnumeric</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gramps">
            <summary>gramps</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gtar">
            <summary>gtar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hdf">
            <summary>hdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Install">
            <summary>install</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Iso">
            <summary>iso</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jnlp">
            <summary>jnlp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Latex">
            <summary>latex</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lzh">
            <summary>lzh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lha">
            <summary>lha</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mie">
            <summary>mie</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Prc">
            <summary>prc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mobi">
            <summary>mobi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Application">
            <summary>application</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lnk">
            <summary>lnk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmd">
            <summary>wmd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmz">
            <summary>wmz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xbap">
            <summary>xbap</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mdb">
            <summary>mdb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Obd">
            <summary>obd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Crd">
            <summary>crd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Clp">
            <summary>clp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Exe">
            <summary>exe</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dll">
            <summary>dll</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Com">
            <summary>com</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bat">
            <summary>bat</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msi">
            <summary>msi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mvb">
            <summary>mvb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M13">
            <summary>m13</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M14">
            <summary>m14</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmf">
            <summary>wmf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Emf">
            <summary>emf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Emz">
            <summary>emz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mny">
            <summary>mny</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pub">
            <summary>pub</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Scd">
            <summary>scd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Trm">
            <summary>trm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wri">
            <summary>wri</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nc">
            <summary>nc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdf">
            <summary>cdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nzb">
            <summary>nzb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P12">
            <summary>p12</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pfx">
            <summary>pfx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P7b">
            <summary>p7b</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spc">
            <summary>spc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P7r">
            <summary>p7r</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rar">
            <summary>rar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ris">
            <summary>ris</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sh">
            <summary>sh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Shar">
            <summary>shar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Swf">
            <summary>swf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xap">
            <summary>xap</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sql">
            <summary>sql</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sit">
            <summary>sit</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sitx">
            <summary>sitx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Srt">
            <summary>srt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sv4cpio">
            <summary>sv4cpio</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sv4crc">
            <summary>sv4crc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.T3">
            <summary>t3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gam">
            <summary>gam</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tar">
            <summary>tar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tcl">
            <summary>tcl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tex">
            <summary>tex</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tfm">
            <summary>tfm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Texinfo">
            <summary>texinfo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Texi">
            <summary>texi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Obj">
            <summary>obj</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ustar">
            <summary>ustar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Src">
            <summary>src</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Der">
            <summary>der</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Crt">
            <summary>crt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fig">
            <summary>fig</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xlf">
            <summary>xlf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpi">
            <summary>xpi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xz">
            <summary>xz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z1">
            <summary>z1</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z2">
            <summary>z2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z3">
            <summary>z3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z4">
            <summary>z4</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z5">
            <summary>z5</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z6">
            <summary>z6</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z7">
            <summary>z7</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Z8">
            <summary>z8</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xaml">
            <summary>xaml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xdf">
            <summary>xdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xenc">
            <summary>xenc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xhtml">
            <summary>xhtml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xht">
            <summary>xht</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xml">
            <summary>xml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xsl">
            <summary>xsl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dtd">
            <summary>dtd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xop">
            <summary>xop</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpl">
            <summary>xpl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xslt">
            <summary>xslt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xspf">
            <summary>xspf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mxml">
            <summary>mxml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xhvml">
            <summary>xhvml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xvml">
            <summary>xvml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xvm">
            <summary>xvm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Yang">
            <summary>yang</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Yin">
            <summary>yin</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Zip">
            <summary>zip</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Adp">
            <summary>adp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Au">
            <summary>au</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Snd">
            <summary>snd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mid">
            <summary>mid</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Midi">
            <summary>midi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Kar">
            <summary>kar</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rmi">
            <summary>rmi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M4a">
            <summary>m4a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp4a">
            <summary>mp4a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpga">
            <summary>mpga</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp2">
            <summary>mp2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp2a">
            <summary>mp2a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp3">
            <summary>mp3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M2a">
            <summary>m2a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M3a">
            <summary>m3a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oga">
            <summary>oga</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ogg">
            <summary>ogg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spx">
            <summary>spx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.S3m">
            <summary>s3m</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sil">
            <summary>sil</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uva">
            <summary>uva</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvva">
            <summary>uvva</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Eol">
            <summary>eol</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dra">
            <summary>dra</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dts">
            <summary>dts</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dtshd">
            <summary>dtshd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Lvp">
            <summary>lvp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pya">
            <summary>pya</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ecelp4800">
            <summary>ecelp4800</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ecelp7470">
            <summary>ecelp7470</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ecelp9600">
            <summary>ecelp9600</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rip">
            <summary>rip</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Weba">
            <summary>weba</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aac">
            <summary>aac</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aif">
            <summary>aif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aiff">
            <summary>aiff</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Aifc">
            <summary>aifc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Caf">
            <summary>caf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Flac">
            <summary>flac</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mka">
            <summary>mka</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M3u">
            <summary>m3u</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wax">
            <summary>wax</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wma">
            <summary>wma</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ram">
            <summary>ram</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ra">
            <summary>ra</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rmp">
            <summary>rmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wav">
            <summary>wav</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xm">
            <summary>xm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cdx">
            <summary>cdx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cif">
            <summary>cif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cmdf">
            <summary>cmdf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cml">
            <summary>cml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Csml">
            <summary>csml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xyz">
            <summary>xyz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bmp">
            <summary>bmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cgm">
            <summary>cgm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.G3">
            <summary>g3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gif">
            <summary>gif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ief">
            <summary>ief</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpeg">
            <summary>jpeg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpg">
            <summary>jpg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpe">
            <summary>jpe</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ktx">
            <summary>ktx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Png">
            <summary>png</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Btif">
            <summary>btif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sgi">
            <summary>sgi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Svg">
            <summary>svg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Svgz">
            <summary>svgz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tiff">
            <summary>tiff</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tif">
            <summary>tif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Psd">
            <summary>psd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvi">
            <summary>uvi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvi">
            <summary>uvvi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvg">
            <summary>uvg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvg">
            <summary>uvvg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Djvu">
            <summary>djvu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Djv">
            <summary>djv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sub">
            <summary>sub</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dwg">
            <summary>dwg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dxf">
            <summary>dxf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fbs">
            <summary>fbs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fpx">
            <summary>fpx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fst">
            <summary>fst</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mmr">
            <summary>mmr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rlc">
            <summary>rlc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mdi">
            <summary>mdi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wdp">
            <summary>wdp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Npx">
            <summary>npx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wbmp">
            <summary>wbmp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xif">
            <summary>xif</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Webp">
            <summary>webp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._3ds">
            <summary>3ds</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ras">
            <summary>ras</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cmx">
            <summary>cmx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fh">
            <summary>fh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fhc">
            <summary>fhc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fh4">
            <summary>fh4</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fh5">
            <summary>fh5</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fh7">
            <summary>fh7</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ico">
            <summary>ico</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sid">
            <summary>sid</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pcx">
            <summary>pcx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pic">
            <summary>pic</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pct">
            <summary>pct</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pnm">
            <summary>pnm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pbm">
            <summary>pbm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pgm">
            <summary>pgm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ppm">
            <summary>ppm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rgb">
            <summary>rgb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tga">
            <summary>tga</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xbm">
            <summary>xbm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xpm">
            <summary>xpm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xwd">
            <summary>xwd</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Eml">
            <summary>eml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mime">
            <summary>mime</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Igs">
            <summary>igs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Iges">
            <summary>iges</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msh">
            <summary>msh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mesh">
            <summary>mesh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Silo">
            <summary>silo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dae">
            <summary>dae</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dwf">
            <summary>dwf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gdl">
            <summary>gdl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gtw">
            <summary>gtw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mts">
            <summary>mts</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vtu">
            <summary>vtu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wrl">
            <summary>wrl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vrml">
            <summary>vrml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3db">
            <summary>x3db</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3dbz">
            <summary>x3dbz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3dv">
            <summary>x3dv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3dvz">
            <summary>x3dvz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3d">
            <summary>x3d</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.X3dz">
            <summary>x3dz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Appcache">
            <summary>appcache</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ics">
            <summary>ics</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ifb">
            <summary>ifb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Css">
            <summary>css</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Csv">
            <summary>csv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Html">
            <summary>html</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Htm">
            <summary>htm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.N3">
            <summary>n3</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Txt">
            <summary>txt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Text">
            <summary>text</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Conf">
            <summary>conf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Def">
            <summary>def</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.List">
            <summary>list</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Log">
            <summary>log</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.In">
            <summary>in</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dsc">
            <summary>dsc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rtx">
            <summary>rtx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sgml">
            <summary>sgml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sgm">
            <summary>sgm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tsv">
            <summary>tsv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.T">
            <summary>t</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tr">
            <summary>tr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Roff">
            <summary>roff</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Man">
            <summary>man</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Me">
            <summary>me</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ms">
            <summary>ms</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ttl">
            <summary>ttl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uri">
            <summary>uri</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uris">
            <summary>uris</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Urls">
            <summary>urls</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcard">
            <summary>vcard</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Curl">
            <summary>curl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dcurl">
            <summary>dcurl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mcurl">
            <summary>mcurl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Scurl">
            <summary>scurl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fly">
            <summary>fly</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Flx">
            <summary>flx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Gv">
            <summary>gv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._3dml">
            <summary>3dml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Spot">
            <summary>spot</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jad">
            <summary>jad</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wml">
            <summary>wml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmls">
            <summary>wmls</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.S">
            <summary>s</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Asm">
            <summary>asm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.C">
            <summary>c</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cc">
            <summary>cc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cxx">
            <summary>cxx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cpp">
            <summary>cpp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.H">
            <summary>h</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hh">
            <summary>hh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dic">
            <summary>dic</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F">
            <summary>f</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.For">
            <summary>for</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F77">
            <summary>f77</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F90">
            <summary>f90</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Java">
            <summary>java</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Nfo">
            <summary>nfo</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Opml">
            <summary>opml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.P">
            <summary>p</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pas">
            <summary>pas</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Etx">
            <summary>etx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sfv">
            <summary>sfv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uu">
            <summary>uu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcs">
            <summary>vcs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vcf">
            <summary>vcf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._3gp">
            <summary>3gp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._3g2">
            <summary>3g2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.H261">
            <summary>h261</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.H263">
            <summary>h263</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.H264">
            <summary>h264</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpgv">
            <summary>jpgv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpm">
            <summary>jpm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jpgm">
            <summary>jpgm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mj2">
            <summary>mj2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mjp2">
            <summary>mjp2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp4">
            <summary>mp4</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mp4v">
            <summary>mp4v</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpg4">
            <summary>mpg4</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpeg">
            <summary>mpeg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpg">
            <summary>mpg</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mpe">
            <summary>mpe</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M1v">
            <summary>m1v</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M2v">
            <summary>m2v</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ogv">
            <summary>ogv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Qt">
            <summary>qt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mov">
            <summary>mov</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvh">
            <summary>uvh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvh">
            <summary>uvvh</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvm">
            <summary>uvm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvm">
            <summary>uvvm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvp">
            <summary>uvp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvp">
            <summary>uvvp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvs">
            <summary>uvs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvs">
            <summary>uvvs</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvv">
            <summary>uvv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvv">
            <summary>uvvv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Dvb">
            <summary>dvb</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fvt">
            <summary>fvt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mxu">
            <summary>mxu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M4u">
            <summary>m4u</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pyv">
            <summary>pyv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvu">
            <summary>uvu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Uvvu">
            <summary>uvvu</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Viv">
            <summary>viv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Webm">
            <summary>webm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F4v">
            <summary>f4v</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Fli">
            <summary>fli</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Flv">
            <summary>flv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.M4v">
            <summary>m4v</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mkv">
            <summary>mkv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mk3d">
            <summary>mk3d</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mks">
            <summary>mks</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mng">
            <summary>mng</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Asf">
            <summary>asf</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Asx">
            <summary>asx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vob">
            <summary>vob</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wm">
            <summary>wm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmv">
            <summary>wmv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wmx">
            <summary>wmx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Wvx">
            <summary>wvx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Avi">
            <summary>avi</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Movie">
            <summary>movie</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Smv">
            <summary>smv</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ice">
            <summary>ice</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Map">
            <summary>map</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Topojson">
            <summary>topojson</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jsonld">
            <summary>jsonld</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Geojson">
            <summary>geojson</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Webmanifest">
            <summary>webmanifest</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Webapp">
            <summary>webapp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F4a">
            <summary>f4a</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F4b">
            <summary>f4b</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Opus">
            <summary>opus</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jxr">
            <summary>jxr</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Hdp">
            <summary>hdp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jng">
            <summary>jng</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes._3gpp">
            <summary>3gpp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.F4p">
            <summary>f4p</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cur">
            <summary>cur</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Woff2">
            <summary>woff2</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Ear">
            <summary>ear</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.War">
            <summary>war</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Img">
            <summary>img</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msm">
            <summary>msm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Msp">
            <summary>msp</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Safariextz">
            <summary>safariextz</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Bbaw">
            <summary>bbaw</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Crx">
            <summary>crx</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Cco">
            <summary>cco</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Jardiff">
            <summary>jardiff</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Run">
            <summary>run</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Oex">
            <summary>oex</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pl">
            <summary>pl</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pm">
            <summary>pm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Rpm">
            <summary>rpm</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Sea">
            <summary>sea</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Tk">
            <summary>tk</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Pem">
            <summary>pem</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Shtml">
            <summary>shtml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Md">
            <summary>md</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Mml">
            <summary>mml</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Xloc">
            <summary>xloc</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Vtt">
            <summary>vtt</summary>
        </member>
        <member name="F:MimeMapping.KnownMimeTypes.Htc">
            <summary>htc</summary>
        </member>
        <member name="T:MimeMapping.MimeUtility">
            <summary>
            MIME type utility to lookup by file extension
            </summary>
        </member>
        <member name="F:MimeMapping.MimeUtility.UnknownMimeType">
            <summary>
            The "octet-stream" subtype is used to indicate that a body contains arbitrary binary data.
            See <a href="https://www.iana.org/assignments/media-types/application/octet-stream">application/octet-stream</a>
            </summary>
        </member>
        <member name="P:MimeMapping.MimeUtility.TypeMap">
            <summary>
            Dictionary of all available types (lazy loaded on first call)
            </summary>
        </member>
        <member name="M:MimeMapping.MimeUtility.GetMimeMapping(System.String)">
            <param name="file">The file extensions (ex: "zip"), the file name, or file path</param>
            <returns>The mime type string, returns "application/octet-stream" if no known type was found</returns>
        </member>
    </members>
</doc>
